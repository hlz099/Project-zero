##Options file for EMTG_v8

##problem type
#0: standard EMTG mission
problem_type 0

##physical constants
#G in km^3/kg/s^2
G 6.67428e-20
#gravity at sea level on Earth in m/s^2
g0 9.80665

##outer-loop solver settings
#whether or not to run the outer-loop
run_outerloop 0
#outer-loop population size
outerloop_popsize 200
#maximum number of outer-loop generations
outerloop_genmax 40
#tournament size for selection
outerloop_tournamentsize 4
#crossover ratio
outerloop_CR 0.3
#mutation rate
outerloop_mu 0.05
#maximum number of stall generations
outerloop_stallmax 20
#fitness tolerance for the outer-loop
outerloop_tolfit 0.0001
#how many elite individuals to retain
outerloop_elitecount 1
#how many times to run the outer-loop
outerloop_ntrials 1
#whether or not to use the parallel outer-loop
outerloop_useparallel 0
#whether or not to perform an outer loop warm start
outerloop_warmstart 0

##inner-loop solver settings
#NLP solver type
#0: SNOPT
#1: WORHP
NLP_solver_type 0
#NLP solver mode
#0: find feasible point only
#1: find optimal solution
NLP_solver_mode 1
#Quiet NLP solver?
quiet_NLP 0
#quantity Max_not_improve for MBH
MBH_max_not_improve 50
#maximum number of trials for MBH
MBH_max_trials 100000
#maximum run time for MBH, in seconds
MBH_max_run_time 60
#maximum step size for uniform MBH, or scaling factor for Cauchy MBH
MBH_max_step_size 0.5
#MBH hop probabilty distribution
#0: uniform
#1: Cauchy
#2: Pareto
#3: Gaussian
MBH_hop_distribution 1
#Pareto distribution alpha
MBH_Pareto_alpha 3.0
#probability of MBH time hop operation
MBH_time_hop_probability 0.05
#feasibility tolerance
snopt_feasibility_tolerance 1e-05
#maximum number of major iterations for SNOPT
snopt_major_iterations 8000
#Maximum run time, in seconds, for a single call to SNOPT
snopt_max_run_time 3600
#method of specifying derivatives
#0: finite difference
#1: analytical flybys and objective function but finite difference the patch points
#2: fully analytical
derivative_type 2
#Will MBH be seeded with an initial point? Otherwise MBH starts from a completely random point.
seed_MBH 0
#Will the initial guess be interpolated?
#(i.e. are we solving a problem with a different number of time steps than the initial guess?)
interpolate_initial_guess 0
#How many time steps were used to create the initial guess?
initial_guess_num_timesteps 20
#Distribution from which the initial guess step sizes were drawn
#0: uniform
#1: Gaussian
#2: Cauchy
initial_guess_step_size_distribution 0
#What scale width (Cauchy) or standard deviation (Gaussian) was used to create the step sizes in the initial guess
initial_guess_step_size_stdv_or_scale 10.0

##low-thrust solver parameters
#number of time steps per phase
num_timesteps 20
#Distribution from which to draw the step sizes for each phase
#0: uniform
#1: Gaussian
#2: Cauchy
step_size_distribution 0
#What scale width (Cauchy) or standard deviation (Gaussian) is used to create the step sizes
step_size_stdv_or_scale 10.0
#Spiral model type
#0: Battin
#1: Edelbaum
spiral_model_type 1

##ephemeris data
#ephemeris source
#0: static
#1: SPICE (default to static if no SPICE file supplied for a body)
ephemeris_source 1
#Universe folder
universe_folder C:\Users\jaengla2\Documents\Projects\EMTG\EMTGv8\trunk\Universe
#SPICE leap seconds kernel - required for SPICE to work
SPICE_leap_seconds_kernel naif0009.tls
#SPICE_reference_frame_kernel
SPICE_reference_frame_kernel pck00010.tpc

##vehicle parameters
#the maximum possible mass in kg of the spacecraft (negative number means use LV max)
maximum_mass 525.2
#Launch vehicle type
#-2: custom launch vehicle
#-1: burn with departure stage engine
#0: fixed initial mass
#1: Atlas V (401)	 NLSII
#2: Atlas V (411)	NLSII
#3: Atlas V (421)	NLSII
#4: Atlas V (431)	NLSII
#5: Atlas V (501)	NLSII
#6: Atlas V (511)	NLSII
#7: Atlas V (521)	NLSII
#8: Atlas V (531)	NLSII
#9: Atlas V (541)	NLSII
#10: Atlas V (551)	NLSII
#11: Falcon 9 (v1.0)	NLSII
#12: Falcon 9 (v1.1)	NLSII
#13: Atlas V (551) w/Star 48	NLSI
#14: Falcon 9 Heavy
#15: Delta IV Heavy	NLSI
#16: SLS Block 1
LV_type 0.0
#Launch vehicle margin (0.0 - 1.0)
LV_margin 0.0
#Launch vehicle adapter mass (kg)
LV_adapter_mass 0.0
#Custom launch vehicle coefficients (must enter 6 coefficients)
#as in a1*C3^5 + a2*C3^4 + a3*C3^3 + a4*C3^2 + a5*C3 + a6
custom_LV_coefficients 0.0 0.0 0.0 0.0 0.0 0.0
#Custom launch vehicle C3 bounds (two values)
custom_LV_C3_bounds 0.0 0.0
#Parking orbit inclination (for use with depart from parking orbit launch vehicle option or for outputing GMAT scenarios
parking_orbit_inclination 28.5
#Parking orbit altitude (for use with depart from parking orbit launch vehicle option or for outputing GMAT scenarios
parking_orbit_altitude 300.0

##parameters that are only relevant for missions that use chemical propulsion
##dummy values should be used if the mission does not use chemical propulsion but are not strictly necessary
#specific impulse in seconds of the engine used for impulsive maneuvers
IspChem 10000.0

##parameters that are only relevant for missions that use a chemical EDS
##dummy values should be used if the mission does not use a chemical EDS but are not strictly necessary
#specific impulse in seconds for the earth departure stage, if applicable
IspDS 0.0

##parameters that are only relevant for missions that use low-thrust
##dummy values should be used if the mission does not use low-thrust but are not strictly necessary
#specific impulse in seconds of the engine used for low-thrust maneuvers
#for VSI systems, this represents maximum Isp
IspLT 3000.0
#minimum Isp for VSI systems
IspLT_minimum 1.0
#thrust of the spacecraft low-thrust motor, in Newtons
Thrust 0.1
#low-thrust engine type
#0: fixed thrust/Isp
#1: constant Isp, efficiency, EMTG computes input power
#2: choice of power model, constant efficiency, EMTG chooses Isp
#3: choice of power model, constant efficiency and Isp
#4: continuously-varying specific impulse
#5: custom thrust and mass flow rate polynomial
#6: NSTAR
#7: XIPS-25
#8: BPT-4000 High-Isp
#9: BPT-4000 High-Thrust
#10: BPT-4000 Ex-High-Isp
#11: NEXT high-Isp v9
#12: VASIMR (argon, using analytical model)
#13: Hall Thruster (Xenon, using analytical model)
#14: NEXT high-ISP v10
#15: NEXT high-thrust v10
#16: BPT-4000 MALTO
#17: NEXIS Cardiff 8-15-201
#18: H6MS Cardiff 8-15-2013
#19: BHT20K Cardiff 8-16-2013
#20: Aerojet HiVHAC EM
engine_type 6
#Custom engine thrust coefficients (T = A*P^4 + B*P^3 + C*P^2 + D*P + E)
engine_input_thrust_coefficients 0.0 0.0 0.0 0.0 0.0
#Custom engine mass flow rate coefficients (mdot = A*P^4 + B*P^3 + C*P^2 + D*P + E)
engine_input_mass_flow_rate_coefficients 0.0 0.0 0.0 0.0 0.0
#Custom engine lower and upper bounds on input power (per engine, in kW)
engine_input_power_bounds 1.0 5.0
#Custom engine input efficiency
user_defined_engine_efficiency 0.7
#number of low-thrust engines
number_of_engines 1
#Throttle logic mode
#0: maximum power use
#1: maximum thrust
#2: maximum Isp
#3: maximum efficiency
throttle_logic_mode 0
#Throttle sharpness (higher means more precise, lower means smoother)
throttle_sharpness 100.0
#engine duty cycle [0,1]
engine_duty_cycle 1.0
#electrical power available at 1 AU (kW)
power_at_1_AU 5.0
#power source type, 0: solar, 1: radioisotope (or other fixed power)
power_source_type 0
#solar power coefficients gamma_1 through gamma_5
#if all gamma = [1 0 0 0 0], then solar power is a simple 1/r^2
solar_power_gamma 1.1063 0.1495 -0.299 -0.0432 0.0
#Power margin (for thrusters, as a fraction)
power_margin 0.0
#Power system decay rate (per year)
power_decay_rate 0.0
#spacecraft power coefficients A, B, and C
#represent the power requirements of the spacecraft at a distance r from the sun
#i.e. heaters, communications, etc
spacecraft_power_coefficients 0.0 0.0 0.0
#spacecraft power model type
#0: P_sc = A + B/r + C/r^2
#1: P_sc = A if P > A, A + B(C - P) otherwise
spacecraft_power_model_type 0
#low-thrust propulsion stage dry mass in kg, will be subtracted before chemical arrival or mid-flight switchover to chemical propulsion
EP_dry_mass 0.0
#Allow initial mass to vary, up to maximum possible mass? (only relevant for MGALT and FBLT)
allow_initial_mass_to_vary 0
#Minimum dry mass
minimum_dry_mass 0.0
#Post-mission delta-v, in km/s (alternatively defined as delta-v margin)
post_mission_delta_v 0.0
#Isp used to compute propellant for post-mission delta-, in seconds
post_mission_Isp 3000.0
#Propellant margin, as a fraction of nominal propellant load
propellant_margin 0.0

##Global problem settings
#mission name
mission_name Default
#mission type - you can specify MGA, MGA-DSM, MGA-LT, or allow the outer-loop to choose
#0: MGA
#1: MGA-DSM
#2: MGA-LT
#3: FBLT
#4: FBLT-S
#5: MGA-NDSM
#6: DTLT
#7: solver chooses (MGA, MGA-DSM)
#8: solver chooses (MGA, MGA-LT)
#9: solver chooses (MGA-DSM, MGA-LT)
#10: solver chooses (MGA, MGA-DSM, MGA-LT)
mission_type 2
#number of journeys (user-defined endpoints)
#Each journey has a central body and two boundary points
#Each central body has a menu of destinations which is used to choose the boundary points. Every menu is structured:
#-1: Boundary at a point in space, either fixed or free
#0: Nothing happens. This code is only used to signify no flyby and should NEVER be coded as a destination.
#1: Body 1 (i.e. Mercury, Io, etc)
#2: Body 2 (i.e. Venus, Europa, etc)
#...
#N: Body N
number_of_journeys 1
#maximum number of phases allowed per journey
max_phases_per_journey 8
#destination list (number of journeys + 1)
destination_list 3 4
#the following option is relevant only if optimizing over total deltaV, should the initial impulse be included in the cost?
include_initial_impulse_in_cost 1
#global time bounds
#0: unbounded
#1: bounded total time (note that the global arrival date bound is by definition the same as the last journey arrival date bound and is not duplicated
global_timebounded 1
#MJD of the opening of the launch window
launch_window_open_date 53782.0
#total flight time bounds, in days
total_flight_time_bounds 0.0 302.0
#objective function type
#0: minimum deltaV
#1: minimum time
#2: maximum final mass
#3: GTOC 1 asteroid deflection function
#4: launch as late as possible in the window
#5: launch as early as possible in the window
#6: maximize orbit energy
#7: minimize launch mass
#8: arrive as early as possible
#9: arrive as late as possible
#10: minimum propellant (not the same as #2)
#11: maximum dry/wet ratio
#12: maximum arrival kinetic energy
objective_type 2
#bounds on the DLA, in degrees (typically set to declination of your launch site)
DLA_bounds -90.0 90.0

#Initial V-Infinity vector (set to zeros unless starting the mission from periapse of a hyperbolic arrival)
initial_V_infinity 0.0 0.0 0.0
#Forced post-launch coast (in days, to be enforced after launch)
forced_post_launch_coast 0.0
#Forced post flyby/intercept coast (in days, to be enforced before/after each flyby/intercept)
forced_flyby_coast 0.0

##Settings for each journey
##dummy values should be used - they should not be necessary but testing was not exhaustive so please use them
#journey names
journey_names Earth_to_Mars
#How much mass to add to the spacecraft at the beginning of the journey (a negative number indicates a mass drop)
journey_starting_mass_increment 0.0
#Is the mass increment variable (i.e. can the optimizer choose how much mass to add)
#This option is ignored for journeys with zero or negative mass increment
journey_variable_mass_increment 0
#is each journey time bounded (one value per journey)
#0: unbounded
#1: bounded flight time
#2: bounded arrival date
journey_timebounded 0
#what are the wait time lower and upper bounds, in days, for each journey (two numbers per journey)
journey_wait_time_bounds 0.0 1000.0
#what are the flight time bounds for each journey (two numbers per journey, use dummy values if no flight time bounds)
journey_flight_time_bounds 0.0 0.0
#what are the arrival date bounds for each journey (two numbers per journey, use dummy values if no flight time bounds)
journey_arrival_date_bounds 53982.0 60000.0
#what are the bounds on the initial impulse for each journey in km/s (two numbers per journey)
#you can set a very high upper bound if you are using a launchy vehicle model - the optimizer will find the correct value
journey_initial_impulse_bounds 0.0 6.97
#journey departure type (one value per journey)
#0: launch or direct insertion
#1: depart from parking orbit (you can use this one in place of a launch vehicle model, and the departure burn will be done with the EDS motor)
#2: free direct departure, i.e. do not burn to get the departure v_infinity (used for when operations about a small body are not modeled but the departure velocity is known)
#3: flyby (only valid for successive journeys)
#4: flyby with fixed v-infinity-out (only valid for successive journeys)
#5: spiral-out from circular orbit (low-thrust missions only)
journey_departure_type 0
#journey arrival type (one value per journey)
#0: insertion into parking orbit (use chemical Isp)
#1: rendezvous (use chemical Isp)
#2: intercept with bounded V_infinity
#3: low-thrust rendezvous (does not work if terminal phase is not low-thrust)
#4: match final v-infinity vector
#5: match final v-infinity vector (low-thrust)
#6: escape (E = 0)
#7: capture spiral
journey_arrival_type 3
#type of orbit elements specified at beginning of journey(0: inertial, 1: COE)
journey_departure_elements_type 1
#orbit elements at beginning of journey (a(km), e, i, RAAN, AOP, MA) supply angles in degrees
journey_departure_elements 0.0 0.0 0.0 0.0 0.0 0.0
#Vary journey departure elements? (one entry per element per journey: 0 means no, 1 means yes)
journey_departure_elements_vary_flag 0 0 0 0 0 0
#Lower and upper bounds on journey departure elements (two per element per journey, ignored if vary flag is off for that element)
journey_departure_elements_bounds 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
journey_arrival_elements_type 1
#orbit elements at end of journey (a(km), e, i, RAAN, AOP, MA) supply angles in degrees
journey_arrival_elements 0.0 0.0 0.0 0.0 0.0 0.0
#Vary journey arrival elements? (one entry per element per journey: 0 means no, 1 means yes)
journey_arrival_elements_vary_flag 0 0 0 0 0 0
#Lower and upper bounds on journey arrival elements (two per element per journey, ignored if vary flag is off for that element)
journey_arrival_elements_bounds 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
#journey central body
#use SPICE names, as per http://www-int.stsci.edu/~sontag/spicedocs/req/naif_ids.html
journey_central_body Sun
#initial VHP for journeys that begin with flybys, in km/s (three numbers per journey)
journey_initial_velocity 0.0 0.0 0.0
#final VHP for journeys that end in intercepts, in km/s (three numbers per journey)
journey_final_velocity 0.0 0.0 0.0
#Impose arrival declination constraint on each journey?
#0: no
#1: yes
journey_arrival_declination_constraint_flag 0
#Arrival declination bounds for each journey
#Two numbers per journey, in degrees
journey_arrival_declination_bounds 0.0 0.0
#Starting orbital radius for an escape spiral at the beginning of the journey
journey_escape_spiral_starting_radius 6678.0
#Final orbital radius for a capture spiral at the end of the journey
journey_capture_spiral_final_radius 6678.0

##Perturbation settings
#Enable solar radiation pressure?
perturb_SRP 0
#Enable third-body perturbations?
perturb_thirdbody 0
#Journey perturbation bodies. One line per journey. The numbers in the line correspond to
#bodies in the journeys Universe file. If perturbations are off, each line should just have a zero
#the numbers in the first line are the number of perturbation bodies for each journey
journey_perturbation_bodies 1
0
#end_journey_perturbation_bodies
#Spacecraft area (in m^2)
spacecraft_area 1.0
#Coefficient of reflectivity
#0.0: perfectly translucent
#1.0: perfectly absorbing
#2.0: perfectly reflecting
coefficient_of_reflectivity 1.0

##output format settings
#output units, 0: km and km/s, 1: LU and LU/day
output_units 0
#Output a GMAT script (not compatible with non-body boundary conditions or thruster/power models)
create_GMAT_script 0

##debug code
##the purpose of this code is so that you can turn the inner-loop solver on and off, force a sequence of planets and/or phase types
#sequence, must have (max_phases_per_journey) entries for each journey. Use 0 to encode no flyby
#integer codes represent planets
#this option is NOT used if the outer-loop is turned on
#first number is the number of sequences listed, followed by the sequences
sequence 1
0 0 0 0 0 0 0 0
#phase type, must have one entry for each phase in the mission
#this option allows you to have different phases use different propulsion systems
#0: MGA, 1: MGA-DSM, 2: MGA-LT, 3: FBLT, 4: FBLT-S 
#if mission_type is set to 0, 1, 2 then the following option is ignored
#if mission_type > 4 and the outer-loop is ON, then the following option is ignored
#the following option is only used if the outer-loop is OFF and mission_type > 4
#not specified because either the outer-loop is off or mission_type > 4
#Check derivatives against finite differencing?
check_derivatives 0
#which inner loop solver to run?
#0: none, evaluate trialX, 1: evaluate a batch of decision vectors, 2: run MBH, 3: run constrained DE, 4: run SNOPT using trialX as initial guess
run_inner_loop 2
#trial decision vector
#trialX
trialX
60225.5 4.49381 1.8412 -0.42749 1.0 1607.04 1267.45 -0.479029 0.544518 -0.688499 -0.520391 -0.325378 0.789508 -0.127559 -0.356765 0.925445 -0.0171268 -0.325609 0.94535 0.103062 -0.280572 0.954284 0.494735 -0.0206954 0.868797 0.470443 0.7551 -0.456627 -0.108893 0.805375 -0.582678 -0.777166 0.524692 -0.347434 -0.957851 -0.137401 0.252275 -0.593674 -0.440465 0.673456 -0.315927 -0.498189 0.807464 -0.136638 -0.505352 0.852027 -0.000282902 -0.500929 0.865488 0.121979 -0.491354 0.862376 0.246396 -0.475373 0.844577 0.384868 -0.448019 0.806942 0.54778 -0.399348 0.735159 0.738995 -0.309954 0.598176 0.927161 -0.150231 0.343224 0.0 1e-06 -0.617789 1.06618 2045.46 1183.29 -0.139115 -0.0282348 -0.0161607 -0.0349874 -0.0294334 -0.00364088 -0.0242222 -0.0851625 -0.00176471 0.192062 -0.450268 0.0262437 0.552795 -0.298962 0.0643262 0.0116699 0.000850977 0.00118965 0.000325484 0.000233011 3.51951e-05 5.39897e-05 4.09284e-05 -1.7362e-06 0.000118288 0.000110098 3.19603e-05 3.35805e-05 8.85543e-05 -1.53556e-05 2.28626e-05 5.45594e-05 -1.84437e-07 9.19532e-05 3.45838e-05 9.06474e-06 4.96491e-05 6.999e-05 1.3821e-05 0.000140597 0.00035793 1.16138e-05 -0.0687592 0.589916 -0.0136576 -0.2055 0.234978 -0.0253556 -0.298305 0.0627304 -0.034035 -0.126758 -0.0459729 -0.0137298 -0.0137522 -0.0143669 -0.00139684 -0.000787391 -0.00165138 -7.09505e-05

#end options file
